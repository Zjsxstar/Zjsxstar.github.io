<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Gavin Yu的博客 • Posts by &#34;-[hexo]&#34; category</title>
        <link>https://zjsxstar.github.io</link>
        <description>欢迎来到Gavin的笔记空间~</description>
        <language>zh-CN</language>
        <pubDate>Fri, 27 Oct 2023 19:26:47 +0800</pubDate>
        <lastBuildDate>Fri, 27 Oct 2023 19:26:47 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">https://zjsxstar.github.io/2023/10/27/hexo/%E5%88%A9%E7%94%A8github+picgo%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A&amp;%E7%BB%93%E5%90%88typora%E5%BF%AB%E9%80%9F%E5%AE%9E%E7%8E%B0%E5%85%B6%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0/</guid>
            <title>利用github+picgo搭建免费图床&amp;结合typora快速实现其图片上传</title>
            <link>https://zjsxstar.github.io/2023/10/27/hexo/%E5%88%A9%E7%94%A8github+picgo%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A&amp;%E7%BB%93%E5%90%88typora%E5%BF%AB%E9%80%9F%E5%AE%9E%E7%8E%B0%E5%85%B6%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0/</link>
            <pubDate>Fri, 27 Oct 2023 19:26:47 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;首先解释下为什么要这么做？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其实只需要 github 你就可以搭建免费的图床，你只需要进行下面几个步骤即可：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在 github 上创建一个远程仓库，名字随便取（这边取 &lt;code&gt;image&lt;/code&gt; ），其他都可以默认。&lt;/li&gt;
&lt;li&gt;在本地找到需要上传的图片文件夹（例如是 &lt;code&gt;Image&lt;/code&gt;  文件夹），进入文件夹，在该目录下打开 &lt;code&gt;git bash&lt;/code&gt; ，然后运行 &lt;code&gt;git init&lt;/code&gt;  命令初始化本地仓库，然后就是运行 &lt;code&gt;git add . &lt;/code&gt;   &lt;code&gt;git commit -m &#39;&#39;&lt;/code&gt; , 然后把本地仓库上传至 github 的远程 image 仓库即可&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;githubpicgo搭建免费图床步骤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#githubpicgo搭建免费图床步骤&#34;&gt;#&lt;/a&gt; github+picgo 搭建免费图床步骤&lt;/h2&gt;
&lt;h3 id=&#34;1-安装picgo软件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-安装picgo软件&#34;&gt;#&lt;/a&gt; 1. 安装 picgo 软件&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;在 github 上搜索 picgo，如下图所示&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026203328188.png&#34; alt=&#34;image-20231026203328188&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后点击 release 版本&lt;/p&gt;
&lt;p&gt;下载对应 windows 的版本&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026203643428.png&#34; alt=&#34;image-20231026203643428&#34;&gt;&lt;/p&gt;
&lt;p&gt;默认安装完成。&lt;/p&gt;
&lt;h3 id=&#34;2在github上建立远程仓库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2在github上建立远程仓库&#34;&gt;#&lt;/a&gt; 2. 在 github 上建立远程仓库&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026204012567.png&#34; alt=&#34;image-20231026204012567&#34;&gt;&lt;/p&gt;
&lt;p&gt;上图因为我已经建立了 image 仓库，所以标红报错了。&lt;/p&gt;
&lt;h3 id=&#34;3-picgo的配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-picgo的配置&#34;&gt;#&lt;/a&gt; 3. picgo 的配置&lt;/h3&gt;
&lt;p&gt;首先是点击图床设置，点击 GitHub 这一栏，然后点击 + 创建，如果已经有了就点编辑&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026204535927.png&#34; alt=&#34;image-20231026204535927&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后进行如下的设置：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026204618228.png&#34; alt=&#34;image-20231026204618228&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;图床配置名可以随便配置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;仓库名：就是你 github 用户名 / 远程仓库名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设定分支名：master，这个看你自己&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设定存储路径：就是在 image 下的路径，我上面的设置就相当于之后的图片是存储在&lt;/p&gt;
&lt;p&gt;github 用户名 / 远程仓库名 / PicGo_image / 目录下&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设定自定义域名&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doLw==&#34;&gt; https://cdn.jsdelivr.net/gh/&lt;/span&gt; （用于资源的一个加速）  这个不变，后面就是设定的仓库名&lt;br&gt;
&lt;strong&gt;注意这个网址，这个网址可以使得没有科学上网也可以看到图片，如果你不是使用 picgo 进行上传也没差，最多麻烦点，通过上传 git 本地仓库的方式上传即可，使用图片记得遵循以下规则：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;https://cdn.jsdelivr.net/gh/github用户名/仓库名/需要显示的图片相对路径（相对于仓库名）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设定 Token&lt;br&gt;
 点击右上角的 github 的设置，找到 Developer settings, 然后点击 Tokens (classic)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026205501572.png&#34; alt=&#34;image-20231026205501572&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后 点击 generate new token (classic)，然后进行如下设置&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026205803543.png&#34; alt=&#34;image-20231026205803543&#34;&gt;&lt;/p&gt;
&lt;p&gt;Note 内容自己随便取&lt;/p&gt;
&lt;p&gt;点击创建，然后复制 token，粘贴到 设定 token 这一栏内即可。&lt;/p&gt;
&lt;p&gt;所有设置完成后 **，记得将它设置为默认图床。**&lt;/p&gt;
&lt;p&gt;到这一步大概配置都完成了，但是还有一个需要验证的地方哦～如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026211017435.png&#34; alt=&#34;image-20231026211017435&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026211109365.png&#34; alt=&#34;image-20231026211109365&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;结合typora快速实现其图片上传&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#结合typora快速实现其图片上传&#34;&gt;#&lt;/a&gt; 结合 typora 快速实现其图片上传&lt;/h2&gt;
&lt;h3 id=&#34;下载typora0984及以上版本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#下载typora0984及以上版本&#34;&gt;#&lt;/a&gt; 下载 typora0.9.84 及以上版本&lt;/h3&gt;
&lt;p&gt;自己网上找哈～&lt;/p&gt;
&lt;p&gt;下载完成后，点击图片的偏好设置，进行如下图所示的设置&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026210629147.png&#34; alt=&#34;image-20231026210629147&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以点击验证图片上传选项，看是否可行&lt;/p&gt;
&lt;h3 id=&#34;如何上传图片&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#如何上传图片&#34;&gt;#&lt;/a&gt; 如何上传图片&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026211322400.png&#34; alt=&#34;image-20231026211322400&#34;&gt; 上面是你正常把图片粘贴到目录下的情况，很明显是本地图片，一旦换个电脑或者上传到服务器上，图片就是不可见的了，只要把图片选中，右键上传图片，就能把图片上传至 github 上，这样图片在其他服务器上也是可见的，如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026211225958.png&#34; alt=&#34;image-20231026211225958&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zjsxstar.github.io/2023/10/26/hexo/hexo%E7%BD%91%E9%A1%B5%E6%90%AD%E5%BB%BA&amp;%E4%B8%BB%E9%A2%98shokax%E4%BD%BF%E7%94%A8/</guid>
            <title>hexo 网页搭建 &amp; 主题shokax的使用</title>
            <link>https://zjsxstar.github.io/2023/10/26/hexo/hexo%E7%BD%91%E9%A1%B5%E6%90%AD%E5%BB%BA&amp;%E4%B8%BB%E9%A2%98shokax%E4%BD%BF%E7%94%A8/</link>
            <pubDate>Thu, 26 Oct 2023 11:11:33 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;hexo-网页搭建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hexo-网页搭建&#34;&gt;#&lt;/a&gt; hexo 网页搭建&lt;/h2&gt;
&lt;h3 id=&#34;hexo简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hexo简介&#34;&gt;#&lt;/a&gt; Hexo 简介&lt;/h3&gt;
&lt;p&gt;Hexo 是一款基于 Node.js 的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在 GitHub 和 Coding 上，是搭建博客的首选框架。大家可以进入&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL3poLWNuLw==&#34;&gt; hexo 官网&lt;/span&gt;进行详细查看，因为 Hexo 的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。&lt;/p&gt;
&lt;h3 id=&#34;hexo搭建步骤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hexo搭建步骤&#34;&gt;#&lt;/a&gt; Hexo 搭建步骤&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;安装 Git&lt;/li&gt;
&lt;li&gt;安装 Node.js&lt;/li&gt;
&lt;li&gt;安装 Hexo&lt;/li&gt;
&lt;li&gt;GitHub 创建个人仓库&lt;/li&gt;
&lt;li&gt;生成 SSH 添加到 GitHub&lt;/li&gt;
&lt;li&gt;将 hexo 部署到 GitHub&lt;/li&gt;
&lt;li&gt;发布文章&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;1安装git&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1安装git&#34;&gt;#&lt;/a&gt; 1. 安装 Git&lt;/h4&gt;
&lt;p&gt;Git 是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的 hexo 博客文章，上传到 GitHub 的工具。Git 非常强大，我觉得建议每个人都去了解一下。廖雪峰老师的 Git 教程写的非常好，大家可以了解一下。&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubGlhb3h1ZWZlbmcuY29tL3dpa2kvMDAxMzczOTUxNjMwNTkyOTYwNmRkMTgzNjEyNDg1NzhjNjdiODA2N2M4YzAxN2IwMDA=&#34;&gt;Git 教程&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;windows：到 git 官网上下载，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRmb3J3aW5kb3dzLm9yZy8=&#34;&gt;Download git&lt;/span&gt;, 下载后会有一个 Git Bash 的命令行工具，以后就用这个工具来使用 git。&lt;/p&gt;
&lt;p&gt;linux：对 linux 来说实在是太简单了，因为最早的 git 就是在 linux 上编写的，只需要一行代码&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo apt-get install git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;安装好后，用 &lt;code&gt;git --version&lt;/code&gt;  来查看一下版本&lt;/p&gt;
&lt;h4 id=&#34;2-安装nodejs&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-安装nodejs&#34;&gt;#&lt;/a&gt; 2. 安装 nodejs&lt;/h4&gt;
&lt;p&gt;Hexo 是基于 nodeJS 编写的，所以需要安装一下 nodeJs 和里面的 npm 工具。&lt;/p&gt;
&lt;p&gt;windows：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub2RlanMub3JnL2VuL2Rvd25sb2FkLw==&#34;&gt;nodejs&lt;/span&gt; 选择 LTS 版本就行了。&lt;/p&gt;
&lt;p&gt;安装完后，打开命令行&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;node -v&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;检查一下有没有安装成功&lt;/p&gt;
&lt;p&gt;顺便说一下，windows 在 git 安装完后，就可以直接使用 git bash 来敲命令行了，不用自带的 cmd，cmd 有点难用。&lt;/p&gt;
&lt;h4 id=&#34;3-安装hexo&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-安装hexo&#34;&gt;#&lt;/a&gt; 3. 安装 hexo&lt;/h4&gt;
&lt;p&gt;前面 git 和 nodejs 安装好后，就可以安装 hexo 了，你可以先创建一个文件夹 blog，然后 &lt;code&gt;cd&lt;/code&gt;  到这个文件夹下（或者在这个文件夹下直接右键 git bash 打开）。&lt;/p&gt;
&lt;p&gt;输入命令&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm install -g hexo-cli&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;依旧用 &lt;code&gt;hexo -v&lt;/code&gt;  查看一下版本&lt;/p&gt;
&lt;p&gt;至此就全部安装完了。&lt;/p&gt;
&lt;p&gt;接下来初始化一下 hexo，在 blog 路径下：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;hexo init myblog&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个 myblog 可以自己取什么名字都行，然后&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; myblog //进入这个myblog文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;新建完成后，指定文件夹目录下有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;node_modules: 依赖包&lt;/li&gt;
&lt;li&gt;public：存放生成的页面&lt;/li&gt;
&lt;li&gt;scaffolds：生成文章的一些模板&lt;/li&gt;
&lt;li&gt;source：用来存放你的文章&lt;/li&gt;
&lt;li&gt;themes：主题&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;_config.yml: 博客的配置文件&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;hexo g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打开 hexo 的服务，在浏览器输入 localhost:4000 就可以看到你生成的博客了。&lt;/p&gt;
&lt;p&gt;大概长这样：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/1698315145946.png&#34; alt=&#34;1698315145946&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;4-github创建个人仓库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-github创建个人仓库&#34;&gt;#&lt;/a&gt; 4. GitHub 创建个人仓库&lt;/h4&gt;
&lt;p&gt;首先，你先要有一个 GitHub 账户，注册我就不细讲了。&lt;/p&gt;
&lt;p&gt;注册完登录后，在 GitHub.com 中看到一个 New repository，新建仓库&lt;/p&gt;
&lt;p&gt;创建一个和你 github 用户名相同的仓库，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS15ZnIxNmFuMTlsLmdpdGh1Yi5pbw==&#34;&gt;后面加.github.io&lt;/span&gt;，只有这样，将来要部署到 GitHub page 的时候，才会被识别，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS14eHh4LTRtNWYzNTRldjVwLmdpdGh1Yi5pbw==&#34;&gt;也就是 xxxx.github.io&lt;/span&gt;，其中 xxx 就是你注册 GitHub 的用户名。&lt;/p&gt;
&lt;p&gt;其他的默认即可，点击 create repository。&lt;/p&gt;
&lt;h4 id=&#34;5-生成ssh添加到github&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5-生成ssh添加到github&#34;&gt;#&lt;/a&gt; 5. 生成 SSH 添加到 GitHub&lt;/h4&gt;
&lt;p&gt;回到你的 git bash 中，&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git config --global user.name &amp;quot;yourname&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git config --global user.email &amp;quot;youremail&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里的 yourname 输入你的 GitHub 用户名，youremail 输入你 GitHub 的邮箱。这样 GitHub 才能知道你是不是对应它的账户。&lt;/p&gt;
&lt;p&gt;可以用以下两条，检查一下你有没有输对&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git config user.name&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git config user.email&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后创建 SSH, 一路回车&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh-keygen -t rsa -C &lt;span class=&#34;string&#34;&gt;&amp;quot;youremail&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个时候它会告诉你已经生成了.ssh 的文件夹。在你的电脑中找到这个文件夹。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/1698303339645.png&#34; alt=&#34;1698303339645&#34;&gt;&lt;/p&gt;
&lt;p&gt;ssh，简单来讲，就是一个秘钥，其中， &lt;code&gt;id_rsa&lt;/code&gt;  是你这台电脑的私人秘钥，不能给别人看的， &lt;code&gt;id_rsa.pub&lt;/code&gt;  是公共秘钥，可以随便给别人看。把这个公钥放在 GitHub 上，这样当你链接 GitHub 自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过 git 上传你的文件到 GitHub 上。&lt;br&gt;
而后在 GitHub 的 setting 中，找到 SSH keys 的设置选项，点击 &lt;code&gt;New SSH key&lt;/code&gt; &lt;br&gt;
 把你的 &lt;code&gt;id_rsa.pub&lt;/code&gt;  里面的信息复制进去。&lt;/p&gt;
&lt;p&gt;在 gitbash 中，查看是否成功&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh -T git@github.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;6-将hexo部署到github&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6-将hexo部署到github&#34;&gt;#&lt;/a&gt; 6. 将 hexo 部署到 GitHub&lt;/h4&gt;
&lt;p&gt;这一步，我们就可以将 hexo 和 GitHub 关联起来，也就是将 hexo 生成的文章部署到 GitHub 上，打开站点配置文件  &lt;code&gt;_config.yml&lt;/code&gt; ，翻到最后，修改为 YourgithubName，就是你的 GitHub 账户名&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;type&lt;/span&gt;: git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  repo: https://github.com/YourgithubName/YourgithubName.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  branch: master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个时候需要先安装 deploy-git ，也就是部署的命令，这样你才能用命令部署到 GitHub。&lt;/p&gt;
&lt;p&gt;在 myblog 目录下运行下面的命令&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm install hexo-deployer-git --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;hexo clean&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo generate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中  &lt;code&gt;hexo clean&lt;/code&gt;  清除了你之前生成的东西，也可以不加。&lt;br&gt;
 &lt;code&gt;hexo generate&lt;/code&gt;  顾名思义，生成静态文章，可以用  &lt;code&gt;hexo g&lt;/code&gt;  缩写&lt;br&gt;
 &lt;code&gt;hexo deploy&lt;/code&gt;  部署文章，可以用 &lt;code&gt;hexo d&lt;/code&gt;  缩写&lt;/p&gt;
&lt;p&gt;注意 deploy 时可能要你输入 username 和 password。&lt;/p&gt;
&lt;p&gt;得到下图就说明部署成功了，过一会儿就可以在 &lt;code&gt;http://yourname.github.io&lt;/code&gt;  这个网站看到你的博客了！！&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img-blog.csdnimg.cn/img_convert/a4eba29bb7c185169228b596e636422f.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;发布文章&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#发布文章&#34;&gt;#&lt;/a&gt; 发布文章&lt;/h4&gt;
&lt;p&gt;在 source/_post 中打开 markdown 文件，就可以开始编辑了。当你写完的时候，再&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;hexo clean&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;就可以看到更新了。&lt;/p&gt;
&lt;h2 id=&#34;主题shokax的使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#主题shokax的使用&#34;&gt;#&lt;/a&gt; 主题 shokax 的使用&lt;/h2&gt;
&lt;p&gt;首先是进入 hexo 的主题网站，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL3RoZW1lcy8=&#34;&gt;Themes | Hexo&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;搜索 shokax，得到如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/1698304925901.png&#34; alt=&#34;1698304925901&#34;&gt;&lt;/p&gt;
&lt;p&gt;点击 shokax，跳转到对应的 github 地址，找到安装方法：&lt;/p&gt;
&lt;p&gt;在 myblog 目录下，运行下面命令：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm i shokax-cli --location=&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# hexo init 初始化环境&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SXC install shokaX&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLmthaXRha3UueHl6L2d1aWRlLyMlRTklODUlOEQlRTclQkQlQUUlRTQlQjglQkIlRTklQTIlOTg=&#34;&gt;点此&lt;/span&gt;以进行下一步配置&lt;/p&gt;
&lt;p&gt;我这边直接贴出下一步配置具体步骤：&lt;/p&gt;
&lt;p&gt;更改根目录 &lt;code&gt;_config.yml&lt;/code&gt;  中的 &lt;code&gt;theme&lt;/code&gt;  为 &lt;code&gt;shokaX&lt;/code&gt;  (SXC 默认 origin 或 npm 安装修改为 &lt;code&gt;shokax&lt;/code&gt; )&lt;br&gt;
 请注意，本主题仅在 npm 上使用的是 &lt;code&gt;shokax&lt;/code&gt; , 其他情况下均为 &lt;code&gt;shokaX&lt;/code&gt; &lt;br&gt;
 对于 linux 等大小写敏感的系统，npm 源的 theme 必须使用 &lt;code&gt;shokax&lt;/code&gt;  同时修改自定义配置文件为 &lt;code&gt;_config.shokax.yml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;至此，主题配置完成，可以使用了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：shokaX 主题不是安装在 themes 目录下的，是安装在 &lt;code&gt;node_modules\hexo-theme-shokax&lt;/code&gt;  下的&lt;/p&gt;
&lt;h3 id=&#34;针对本地运行能显示图片但是部署到github上后就不能显示的问题的解决方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#针对本地运行能显示图片但是部署到github上后就不能显示的问题的解决方法&#34;&gt;#&lt;/a&gt; 针对本地运行能显示图片，但是部署到 github 上后就不能显示的问题的解决方法&lt;/h3&gt;
&lt;p&gt;目前新浪图床开启了防盗链，所以所有 cover 图片都无法正常加载，解决方法如下 **（二选一）**:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自托管封面图片&lt;/li&gt;
&lt;li&gt;使用 CSS 渐变模式&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;自托管&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#自托管&#34;&gt;#&lt;/a&gt; 自托管&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRlZS5jb20vemt6MC9pbWFnZS90cmVlL21hc3Rlcg==&#34;&gt;点我&lt;/span&gt;跳转到作者做的封面图片备份，将备份 clone 到本地或服务器上，剩下的和静态网站托管一样&lt;br&gt;
修改 &lt;code&gt;_images.yml&lt;/code&gt;  内的内容，参考此格式:&lt;/p&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;http://example.com/img1.webp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;http://example.com/img2.webp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;使用css渐变模式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用css渐变模式&#34;&gt;#&lt;/a&gt; 使用 CSS 渐变模式&lt;/h4&gt;
&lt;p&gt;此模式将文章封面修改为 CSS 渐变来解决此问题&lt;br&gt;
修改主题 &lt;code&gt;_config.yml&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;experiments:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  gradient: true # 使用CSS渐变作为文章封面&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fixedCover: &amp;quot;/cover.webp&amp;quot; # 当gradient为true时使用的主页面cover或者主界面的固定Cover(0.1.5+)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  # 上面的配置请设置为自己的背景图片&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;随后重新 &lt;code&gt;hexo g&lt;/code&gt;  即可&lt;/p&gt;
&lt;p&gt;后续的详细的配置可以参考&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY2F0ZWdvcmllcy9jb21wdXRlci1zY2llbmNlL25vdGUv&#34;&gt;分类：二进制杂谈 | Yume Shoka = 優萌初華 = 有夢書架 (lostyu.me)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#参考链接&#34;&gt;#&lt;/a&gt; 参考链接&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzM3NzgxMzA0L2FydGljbGUvZGV0YWlscy84MjcyOTAyOQ==&#34;&gt;hexo 史上最全搭建教程 - CSDN 博客&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JldHJheVZpcmdpbmlhL2FydGljbGUvZGV0YWlscy8xMTM1NzIzNjQ=&#34;&gt;第 2 章 - Hexo 博客美化 | shkoa 的配置范例_shokax 主题 - CSDN 博客&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
