<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://zjsxstar.github.io</id>
    <title>Gavin Yu的博客</title>
    <link href="https://zjsxstar.github.io" />
    <updated>2023-10-26T12:14:50.783Z</updated>
    <entry>
        <id>https://zjsxstar.github.io/2023/10/26/%E5%88%A9%E7%94%A8github+picgo%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A&amp;%E7%BB%93%E5%90%88typora%E5%BF%AB%E9%80%9F%E5%AE%9E%E7%8E%B0%E5%85%B6%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0/</id>
        <title>利用github+picgo搭建免费图床&amp;结合typora快速实现其图片上传</title>
        <link rel="alternate" href="https://zjsxstar.github.io/2023/10/26/%E5%88%A9%E7%94%A8github+picgo%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A&amp;%E7%BB%93%E5%90%88typora%E5%BF%AB%E9%80%9F%E5%AE%9E%E7%8E%B0%E5%85%B6%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0/"/>
        <content type="html">&lt;p&gt;&lt;strong&gt;首先解释下为什么要这么做？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其实只需要 github 你就可以搭建免费的图床，你只需要进行下面几个步骤即可：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在 github 上创建一个远程仓库，名字随便取（这边取 &lt;code&gt;image&lt;/code&gt; ），其他都可以默认。&lt;/li&gt;
&lt;li&gt;在本地找到需要上传的图片文件夹（例如是 &lt;code&gt;Image&lt;/code&gt;  文件夹），进入文件夹，在该目录下打开 &lt;code&gt;git bash&lt;/code&gt; ，然后运行 &lt;code&gt;git init&lt;/code&gt;  命令初始化本地仓库，然后就是运行 &lt;code&gt;git add . &lt;/code&gt;   &lt;code&gt;git commit -m &#39;&#39;&lt;/code&gt; , 然后把本地仓库上传至 github 的远程 image 仓库即可&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;githubpicgo搭建免费图床步骤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#githubpicgo搭建免费图床步骤&#34;&gt;#&lt;/a&gt; github+picgo 搭建免费图床步骤&lt;/h1&gt;
&lt;h2 id=&#34;1-安装picgo软件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-安装picgo软件&#34;&gt;#&lt;/a&gt; 1. 安装 picgo 软件&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;在 github 上搜索 picgo，如下图所示&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026203328188.png&#34; alt=&#34;image-20231026203328188&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后点击 release 版本&lt;/p&gt;
&lt;p&gt;下载对应 windows 的版本&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026203643428.png&#34; alt=&#34;image-20231026203643428&#34;&gt;&lt;/p&gt;
&lt;p&gt;默认安装完成。&lt;/p&gt;
&lt;h2 id=&#34;2在github上建立远程仓库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2在github上建立远程仓库&#34;&gt;#&lt;/a&gt; 2. 在 github 上建立远程仓库&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026204012567.png&#34; alt=&#34;image-20231026204012567&#34;&gt;&lt;/p&gt;
&lt;p&gt;上图因为我已经建立了 image 仓库，所以标红报错了。&lt;/p&gt;
&lt;h2 id=&#34;3-picgo的配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-picgo的配置&#34;&gt;#&lt;/a&gt; 3. picgo 的配置&lt;/h2&gt;
&lt;p&gt;首先是点击图床设置，点击 GitHub 这一栏，然后点击 + 创建，如果已经有了就点编辑&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026204535927.png&#34; alt=&#34;image-20231026204535927&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后进行如下的设置：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026204618228.png&#34; alt=&#34;image-20231026204618228&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;图床配置名可以随便配置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;仓库名：就是你 github 用户名 / 远程仓库名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设定分支名：master，这个看你自己&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设定存储路径：就是在 image 下的路径，我上面的设置就相当于之后的图片是存储在&lt;/p&gt;
&lt;p&gt;github 用户名 / 远程仓库名 / PicGo_image / 目录下&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设定自定义域名&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doLw==&#34;&gt; https://cdn.jsdelivr.net/gh/&lt;/span&gt; （用于资源的一个加速）  这个不变，后面就是设定的仓库名&lt;br&gt;
&lt;strong&gt;注意这个网址，这个网址可以使得没有科学上网也可以看到图片，如果你不是使用 picgo 进行上传也没差，最多麻烦点，通过上传 git 本地仓库的方式上传即可，使用图片记得遵循以下规则：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;https://cdn.jsdelivr.net/gh/github用户名/仓库名/需要显示的图片相对路径（相对于仓库名）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设定 Token&lt;br&gt;
 点击右上角的 github 的设置，找到 Developer settings, 然后点击 Tokens (classic)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026205501572.png&#34; alt=&#34;image-20231026205501572&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后 点击 generate new token (classic)，然后进行如下设置&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026205803543.png&#34; alt=&#34;image-20231026205803543&#34;&gt;&lt;/p&gt;
&lt;p&gt;Note 内容自己随便取&lt;/p&gt;
&lt;p&gt;点击创建，然后复制 token，粘贴到 设定 token 这一栏内即可。&lt;/p&gt;
&lt;p&gt;所有设置完成后 **，记得将它设置为默认图床。**&lt;/p&gt;
&lt;p&gt;到这一步大概配置都完成了，但是还有一个需要验证的地方哦～如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026211017435.png&#34; alt=&#34;image-20231026211017435&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026211109365.png&#34; alt=&#34;image-20231026211109365&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;结合typora快速实现其图片上传&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#结合typora快速实现其图片上传&#34;&gt;#&lt;/a&gt; 结合 typora 快速实现其图片上传&lt;/h1&gt;
&lt;h2 id=&#34;下载typora0984及以上版本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#下载typora0984及以上版本&#34;&gt;#&lt;/a&gt; 下载 typora0.9.84 及以上版本&lt;/h2&gt;
&lt;p&gt;自己网上找哈～&lt;/p&gt;
&lt;p&gt;下载完成后，点击图片的偏好设置，进行如下图所示的设置&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026210629147.png&#34; alt=&#34;image-20231026210629147&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以点击验证图片上传选项，看是否可行&lt;/p&gt;
&lt;h2 id=&#34;如何上传图片&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#如何上传图片&#34;&gt;#&lt;/a&gt; 如何上传图片&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026211322400.png&#34; alt=&#34;image-20231026211322400&#34;&gt; 上面是你正常把图片粘贴到目录下的情况，很明显是本地图片，一旦换个电脑或者上传到服务器上，图片就是不可见的了，只要把图片选中，右键上传图片，就能把图片上传至 github 上，这样图片在其他服务器上也是可见的，如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026211225958.png&#34; alt=&#34;image-20231026211225958&#34;&gt;&lt;/p&gt;
</content>
        <updated>2023-10-26T12:14:50.783Z</updated>
    </entry>
    <entry>
        <id>https://zjsxstar.github.io/2023/10/26/hello-world/</id>
        <title>Hello World</title>
        <link rel="alternate" href="https://zjsxstar.github.io/2023/10/26/hello-world/"/>
        <content type="html">&lt;p&gt;Welcome to &lt;a href=&#34;https://hexo.io/&#34;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&#34;https://hexo.io/docs/&#34;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&#34;https://hexo.io/docs/troubleshooting.html&#34;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&#34;https://github.com/hexojs/hexo/issues&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;Quick-Start&#34;&gt;&lt;a href=&#34;#Quick-Start&#34; class=&#34;headerlink&#34; title=&#34;Quick Start&#34;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&#34;Create-a-new-post&#34;&gt;&lt;a href=&#34;#Create-a-new-post&#34; class=&#34;headerlink&#34; title=&#34;Create a new post&#34;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo new &lt;span class=&#34;string&#34;&gt;&amp;quot;My New Post&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/writing.html&#34;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;Run-server&#34;&gt;&lt;a href=&#34;#Run-server&#34; class=&#34;headerlink&#34; title=&#34;Run server&#34;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/server.html&#34;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;Generate-static-files&#34;&gt;&lt;a href=&#34;#Generate-static-files&#34; class=&#34;headerlink&#34; title=&#34;Generate static files&#34;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/generating.html&#34;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;Deploy-to-remote-sites&#34;&gt;&lt;a href=&#34;#Deploy-to-remote-sites&#34; class=&#34;headerlink&#34; title=&#34;Deploy to remote sites&#34;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/one-command-deployment.html&#34;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
        <updated>2023-10-26T10:07:26.250Z</updated>
    </entry>
    <entry>
        <id>https://zjsxstar.github.io/2023/10/26/hexo%E7%BD%91%E9%A1%B5%E6%90%AD%E5%BB%BA&amp;%E4%B8%BB%E9%A2%98shokax%E4%BD%BF%E7%94%A8/</id>
        <title>hexo 网页搭建 &amp; 主题shokax的使用</title>
        <link rel="alternate" href="https://zjsxstar.github.io/2023/10/26/hexo%E7%BD%91%E9%A1%B5%E6%90%AD%E5%BB%BA&amp;%E4%B8%BB%E9%A2%98shokax%E4%BD%BF%E7%94%A8/"/>
        <content type="html">&lt;h2 id=&#34;hexo-网页搭建&#34;&gt;&lt;a href=&#34;#hexo-网页搭建&#34; class=&#34;headerlink&#34; title=&#34;hexo 网页搭建&#34;&gt;&lt;/a&gt;hexo 网页搭建&lt;/h2&gt;&lt;h3 id=&#34;Hexo简介&#34;&gt;&lt;a href=&#34;#Hexo简介&#34; class=&#34;headerlink&#34; title=&#34;Hexo简介&#34;&gt;&lt;/a&gt;Hexo简介&lt;/h3&gt;&lt;p&gt;Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。大家可以进入&lt;a href=&#34;https://hexo.io/zh-cn/&#34;&gt;hexo官网&lt;/a&gt;进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。&lt;/p&gt;
&lt;h3 id=&#34;Hexo搭建步骤&#34;&gt;&lt;a href=&#34;#Hexo搭建步骤&#34; class=&#34;headerlink&#34; title=&#34;Hexo搭建步骤&#34;&gt;&lt;/a&gt;Hexo搭建步骤&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;安装Git&lt;/li&gt;
&lt;li&gt;安装Node.js&lt;/li&gt;
&lt;li&gt;安装Hexo&lt;/li&gt;
&lt;li&gt;GitHub创建个人仓库&lt;/li&gt;
&lt;li&gt;生成SSH添加到GitHub&lt;/li&gt;
&lt;li&gt;将hexo部署到GitHub&lt;/li&gt;
&lt;li&gt;发布文章&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;1-安装Git&#34;&gt;&lt;a href=&#34;#1-安装Git&#34; class=&#34;headerlink&#34; title=&#34;1.安装Git&#34;&gt;&lt;/a&gt;1.安装Git&lt;/h4&gt;&lt;p&gt;Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的hexo博客文章，上传到GitHub的工具。Git非常强大，我觉得建议每个人都去了解一下。廖雪峰老师的Git教程写的非常好，大家可以了解一下。&lt;a href=&#34;https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000&#34;&gt;Git教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;windows：到git官网上下载,&lt;a href=&#34;https://gitforwindows.org/&#34;&gt;Download git&lt;/a&gt;,下载后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。&lt;/p&gt;
&lt;p&gt;linux：对linux来说实在是太简单了，因为最早的git就是在linux上编写的，只需要一行代码&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo apt-get install git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;安装好后，用&lt;code&gt;git --version&lt;/code&gt; 来查看一下版本&lt;/p&gt;
&lt;h4 id=&#34;2-安装nodejs&#34;&gt;&lt;a href=&#34;#2-安装nodejs&#34; class=&#34;headerlink&#34; title=&#34;2. 安装nodejs&#34;&gt;&lt;/a&gt;2. 安装nodejs&lt;/h4&gt;&lt;p&gt;Hexo是基于nodeJS编写的，所以需要安装一下nodeJs和里面的npm工具。&lt;/p&gt;
&lt;p&gt;windows：&lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;nodejs&lt;/a&gt;选择LTS版本就行了。&lt;/p&gt;
&lt;p&gt;安装完后，打开命令行&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;node -v&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;检查一下有没有安装成功&lt;/p&gt;
&lt;p&gt;顺便说一下，windows在git安装完后，就可以直接使用git bash来敲命令行了，不用自带的cmd，cmd有点难用。&lt;/p&gt;
&lt;h4 id=&#34;3-安装hexo&#34;&gt;&lt;a href=&#34;#3-安装hexo&#34; class=&#34;headerlink&#34; title=&#34;3. 安装hexo&#34;&gt;&lt;/a&gt;3. 安装hexo&lt;/h4&gt;&lt;p&gt;前面git和nodejs安装好后，就可以安装hexo了，你可以先创建一个文件夹blog，然后&lt;code&gt;cd&lt;/code&gt;到这个文件夹下（或者在这个文件夹下直接右键git bash打开）。&lt;/p&gt;
&lt;p&gt;输入命令&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm install -g hexo-cli&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;依旧用&lt;code&gt;hexo -v&lt;/code&gt;查看一下版本&lt;/p&gt;
&lt;p&gt;至此就全部安装完了。&lt;/p&gt;
&lt;p&gt;接下来初始化一下hexo，在blog路径下：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;hexo init myblog&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这个myblog可以自己取什么名字都行，然后&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; myblog //进入这个myblog文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;新建完成后，指定文件夹目录下有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;node_modules: 依赖包&lt;/li&gt;
&lt;li&gt;public：存放生成的页面&lt;/li&gt;
&lt;li&gt;scaffolds：生成文章的一些模板&lt;/li&gt;
&lt;li&gt;source：用来存放你的文章&lt;/li&gt;
&lt;li&gt;themes：主题&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;_config.yml: 博客的配置文件&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;hexo g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;打开hexo的服务，在浏览器输入localhost:4000就可以看到你生成的博客了。&lt;/p&gt;
&lt;p&gt;大概长这样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/1698315145946.png&#34; alt=&#34;1698315145946&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;4-GitHub创建个人仓库&#34;&gt;&lt;a href=&#34;#4-GitHub创建个人仓库&#34; class=&#34;headerlink&#34; title=&#34;4. GitHub创建个人仓库&#34;&gt;&lt;/a&gt;4. GitHub创建个人仓库&lt;/h4&gt;&lt;p&gt;首先，你先要有一个GitHub账户，注册我就不细讲了。&lt;/p&gt;
&lt;p&gt;注册完登录后，在GitHub.com中看到一个New repository，新建仓库&lt;/p&gt;
&lt;p&gt;创建一个和你github用户名相同的仓库，后面加.github.io，只有这样，将来要部署到GitHub page的时候，才会被识别，也就是xxxx.github.io，其中xxx就是你注册GitHub的用户名。&lt;/p&gt;
&lt;p&gt;其他的默认即可，点击create repository。&lt;/p&gt;
&lt;h4 id=&#34;5-生成SSH添加到GitHub&#34;&gt;&lt;a href=&#34;#5-生成SSH添加到GitHub&#34; class=&#34;headerlink&#34; title=&#34;5. 生成SSH添加到GitHub&#34;&gt;&lt;/a&gt;5. 生成SSH添加到GitHub&lt;/h4&gt;&lt;p&gt;回到你的git bash中，&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git config --global user.name &amp;quot;yourname&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git config --global user.email &amp;quot;youremail&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。&lt;/p&gt;
&lt;p&gt;可以用以下两条，检查一下你有没有输对&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git config user.name&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git config user.email&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;然后创建SSH,一路回车&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh-keygen -t rsa -C &lt;span class=&#34;string&#34;&gt;&amp;quot;youremail&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/1698303339645.png&#34; alt=&#34;1698303339645&#34;&gt;&lt;/p&gt;
&lt;p&gt;ssh，简单来讲，就是一个秘钥，其中，&lt;code&gt;id_rsa&lt;/code&gt;是你这台电脑的私人秘钥，不能给别人看的，&lt;code&gt;id_rsa.pub&lt;/code&gt;是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。&lt;br&gt;而后在GitHub的setting中，找到SSH keys的设置选项，点击&lt;code&gt;New SSH key&lt;/code&gt;&lt;br&gt;把你的&lt;code&gt;id_rsa.pub&lt;/code&gt;里面的信息复制进去。&lt;/p&gt;
&lt;p&gt;在gitbash中，查看是否成功&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh -T git@github.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;6-将hexo部署到GitHub&#34;&gt;&lt;a href=&#34;#6-将hexo部署到GitHub&#34; class=&#34;headerlink&#34; title=&#34;6. 将hexo部署到GitHub&#34;&gt;&lt;/a&gt;6. 将hexo部署到GitHub&lt;/h4&gt;&lt;p&gt;这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，打开站点配置文件 &lt;code&gt;_config.yml&lt;/code&gt;，翻到最后，修改为YourgithubName，就是你的GitHub账户名&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;type&lt;/span&gt;: git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  repo: https://github.com/YourgithubName/YourgithubName.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  branch: master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。&lt;/p&gt;
&lt;p&gt;在myblog目录下运行下面的命令&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm install hexo-deployer-git --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;然后&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;hexo clean&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo generate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;其中 &lt;code&gt;hexo clean&lt;/code&gt;清除了你之前生成的东西，也可以不加。&lt;br&gt;&lt;code&gt;hexo generate&lt;/code&gt; 顾名思义，生成静态文章，可以用 &lt;code&gt;hexo g&lt;/code&gt;缩写&lt;br&gt;&lt;code&gt;hexo deploy&lt;/code&gt; 部署文章，可以用&lt;code&gt;hexo d&lt;/code&gt;缩写&lt;/p&gt;
&lt;p&gt;注意deploy时可能要你输入username和password。&lt;/p&gt;
&lt;p&gt;得到下图就说明部署成功了，过一会儿就可以在&lt;code&gt;http://yourname.github.io&lt;/code&gt; 这个网站看到你的博客了！！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img-blog.csdnimg.cn/img_convert/a4eba29bb7c185169228b596e636422f.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;发布文章&#34;&gt;&lt;a href=&#34;#发布文章&#34; class=&#34;headerlink&#34; title=&#34;发布文章&#34;&gt;&lt;/a&gt;发布文章&lt;/h4&gt;&lt;p&gt;在source&amp;#x2F;_post中打开markdown文件，就可以开始编辑了。当你写完的时候，再&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;hexo clean&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;就可以看到更新了。&lt;/p&gt;
&lt;h2 id=&#34;主题shokax的使用&#34;&gt;&lt;a href=&#34;#主题shokax的使用&#34; class=&#34;headerlink&#34; title=&#34;主题shokax的使用&#34;&gt;&lt;/a&gt;主题shokax的使用&lt;/h2&gt;&lt;p&gt;首先是进入hexo的主题网站，&lt;a href=&#34;https://hexo.io/themes/&#34;&gt;Themes | Hexo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;搜索shokax，得到如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/1698304925901.png&#34; alt=&#34;1698304925901&#34;&gt;&lt;/p&gt;
&lt;p&gt;点击shokax，跳转到对应的github地址，找到安装方法：&lt;/p&gt;
&lt;p&gt;在myblog目录下，运行下面命令：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm i shokax-cli --location=&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# hexo init 初始化环境&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SXC install shokaX&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://docs.kaitaku.xyz/guide/#%E9%85%8D%E7%BD%AE%E4%B8%BB%E9%A2%98&#34;&gt;点此&lt;/a&gt;以进行下一步配置&lt;/p&gt;
&lt;p&gt;我这边直接贴出下一步配置具体步骤：&lt;/p&gt;
&lt;p&gt;更改根目录&lt;code&gt;_config.yml&lt;/code&gt;中的&lt;code&gt;theme&lt;/code&gt;为&lt;code&gt;shokaX&lt;/code&gt;(SXC 默认 origin 或 npm 安装修改为&lt;code&gt;shokax&lt;/code&gt;)&lt;br&gt;请注意,本主题仅在 npm 上使用的是&lt;code&gt;shokax&lt;/code&gt;,其他情况下均为&lt;code&gt;shokaX&lt;/code&gt;&lt;br&gt;对于 linux 等大小写敏感的系统，npm 源的 theme 必须使用&lt;code&gt;shokax&lt;/code&gt;同时修改自定义配置文件为&lt;code&gt;_config.shokax.yml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;至此，主题配置完成，可以使用了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：shokaX主题不是安装在themes目录下的，是安装在&lt;code&gt;node_modules\hexo-theme-shokax&lt;/code&gt;下的&lt;/p&gt;
&lt;h3 id=&#34;针对本地运行能显示图片，但是部署到github上后就不能显示的问题的解决方法&#34;&gt;&lt;a href=&#34;#针对本地运行能显示图片，但是部署到github上后就不能显示的问题的解决方法&#34; class=&#34;headerlink&#34; title=&#34;针对本地运行能显示图片，但是部署到github上后就不能显示的问题的解决方法&#34;&gt;&lt;/a&gt;针对本地运行能显示图片，但是部署到github上后就不能显示的问题的解决方法&lt;/h3&gt;&lt;p&gt;目前新浪图床开启了防盗链,所以所有cover图片都无法正常加载,解决方法如下&lt;strong&gt;（二选一）&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自托管封面图片&lt;/li&gt;
&lt;li&gt;使用CSS渐变模式&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;自托管&#34;&gt;&lt;a href=&#34;#自托管&#34; class=&#34;headerlink&#34; title=&#34;自托管&#34;&gt;&lt;/a&gt;自托管&lt;/h4&gt;&lt;p&gt;&lt;a href=&#34;https://gitee.com/zkz0/image/tree/master&#34;&gt;点我&lt;/a&gt;跳转到作者做的封面图片备份,将备份clone到本地或服务器上,剩下的和静态网站托管一样&lt;br&gt;修改&lt;code&gt;_images.yml&lt;/code&gt;内的内容,参考此格式:&lt;/p&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;http://example.com/img1.webp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;http://example.com/img2.webp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;使用CSS渐变模式&#34;&gt;&lt;a href=&#34;#使用CSS渐变模式&#34; class=&#34;headerlink&#34; title=&#34;使用CSS渐变模式&#34;&gt;&lt;/a&gt;使用CSS渐变模式&lt;/h4&gt;&lt;p&gt;此模式将文章封面修改为CSS渐变来解决此问题&lt;br&gt;修改主题&lt;code&gt;_config.yml&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;experiments:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  gradient: true # 使用CSS渐变作为文章封面&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fixedCover: &amp;quot;/cover.webp&amp;quot; # 当gradient为true时使用的主页面cover或者主界面的固定Cover(0.1.5+)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  # 上面的配置请设置为自己的背景图片&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;随后重新&lt;code&gt;hexo g&lt;/code&gt;即可&lt;/p&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;&lt;a href=&#34;#参考链接&#34; class=&#34;headerlink&#34; title=&#34;参考链接&#34;&gt;&lt;/a&gt;参考链接&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/sinat_37781304/article/details/82729029&#34;&gt;hexo史上最全搭建教程-CSDN博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/BetrayVirginia/article/details/113572364&#34;&gt;第2章-Hexo博客美化 | shkoa的配置范例_shokax主题-CSDN博客&lt;/a&gt;&lt;/p&gt;
</content>
        <updated>2023-10-26T03:11:33.426Z</updated>
    </entry>
</feed>
