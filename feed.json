{
    "version": "https://jsonfeed.org/version/1",
    "title": "Gavin Yu的博客",
    "description": "欢迎来到Gavin的笔记空间~",
    "home_page_url": "https://zjsxstar.github.io",
    "items": [
        {
            "id": "https://zjsxstar.github.io/2023/10/28/%E7%85%A7%E7%89%87%E5%A2%99/%E5%A6%B9%E5%A6%B9/",
            "url": "https://zjsxstar.github.io/2023/10/28/%E7%85%A7%E7%89%87%E5%A2%99/%E5%A6%B9%E5%A6%B9/",
            "title": "妹妹的照片墙",
            "date_published": "2023-10-28T05:37:27.158Z",
            "content_html": "<div style=\"display: flex; justify-content: center; flex-wrap: wrap;\">     <img data-src=\"https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231028134745304.png\" alt=\"妹妹的照片1\" width=\"300\" style=\"margin: 10px;\">     <img data-src=\"https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231028135025239.png\" alt=\"妹妹的照片2\" width=\"300\" style=\"margin: 10px;\">          <!-- 你可以继续添加更多的照片... --> </div>\n<div style=\"display: flex; justify-content: center; flex-wrap: wrap;\">     <img data-src=\"https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231028135202434.png\" alt=\"妹妹的照片3\" width=\"300\" style=\"margin: 10px;\">     <img data-src=\"https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/IMG_7017(20231027-153439).jpg\" alt=\"妹妹的照片4\" width=\"300\" style=\"margin: 10px;\">          <!-- 你可以继续添加更多的照片... --> </div>\n",
            "tags": []
        },
        {
            "id": "https://zjsxstar.github.io/2023/10/27/hexo/%E5%88%A9%E7%94%A8github+picgo%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A&%E7%BB%93%E5%90%88typora%E5%BF%AB%E9%80%9F%E5%AE%9E%E7%8E%B0%E5%85%B6%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0/",
            "url": "https://zjsxstar.github.io/2023/10/27/hexo/%E5%88%A9%E7%94%A8github+picgo%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A&%E7%BB%93%E5%90%88typora%E5%BF%AB%E9%80%9F%E5%AE%9E%E7%8E%B0%E5%85%B6%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0/",
            "title": "利用github+picgo搭建免费图床&结合typora快速实现其图片上传",
            "date_published": "2023-10-27T11:26:47.683Z",
            "content_html": "<p><strong>首先解释下为什么要这么做？</strong></p>\n<p>其实只需要 github 你就可以搭建免费的图床，你只需要进行下面几个步骤即可：</p>\n<ol>\n<li>在 github 上创建一个远程仓库，名字随便取（这边取 <code>image</code> ），其他都可以默认。</li>\n<li>在本地找到需要上传的图片文件夹（例如是 <code>Image</code>  文件夹），进入文件夹，在该目录下打开 <code>git bash</code> ，然后运行 <code>git init</code>  命令初始化本地仓库，然后就是运行 <code>git add . </code>   <code>git commit -m ''</code> , 然后把本地仓库上传至 github 的远程 image 仓库即可</li>\n</ol>\n<h2 id=\"githubpicgo搭建免费图床步骤\"><a class=\"markdownIt-Anchor\" href=\"#githubpicgo搭建免费图床步骤\">#</a> github+picgo 搭建免费图床步骤</h2>\n<h3 id=\"1-安装picgo软件\"><a class=\"markdownIt-Anchor\" href=\"#1-安装picgo软件\">#</a> 1. 安装 picgo 软件</h3>\n<ol>\n<li>在 github 上搜索 picgo，如下图所示</li>\n</ol>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026203328188.png\" alt=\"image-20231026203328188\"></p>\n<p>然后点击 release 版本</p>\n<p>下载对应 windows 的版本</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026203643428.png\" alt=\"image-20231026203643428\"></p>\n<p>默认安装完成。</p>\n<h3 id=\"2在github上建立远程仓库\"><a class=\"markdownIt-Anchor\" href=\"#2在github上建立远程仓库\">#</a> 2. 在 github 上建立远程仓库</h3>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026204012567.png\" alt=\"image-20231026204012567\"></p>\n<p>上图因为我已经建立了 image 仓库，所以标红报错了。</p>\n<h3 id=\"3-picgo的配置\"><a class=\"markdownIt-Anchor\" href=\"#3-picgo的配置\">#</a> 3. picgo 的配置</h3>\n<p>首先是点击图床设置，点击 GitHub 这一栏，然后点击 + 创建，如果已经有了就点编辑</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026204535927.png\" alt=\"image-20231026204535927\"></p>\n<p>然后进行如下的设置：</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026204618228.png\" alt=\"image-20231026204618228\"></p>\n<ul>\n<li>\n<p>图床配置名可以随便配置</p>\n</li>\n<li>\n<p>仓库名：就是你 github 用户名 / 远程仓库名</p>\n</li>\n<li>\n<p>设定分支名：master，这个看你自己</p>\n</li>\n<li>\n<p>设定存储路径：就是在 image 下的路径，我上面的设置就相当于之后的图片是存储在</p>\n<p>github 用户名 / 远程仓库名 / PicGo_image / 目录下</p>\n</li>\n<li>\n<p>设定自定义域名<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doLw==\"> https://cdn.jsdelivr.net/gh/</span> （用于资源的一个加速）  这个不变，后面就是设定的仓库名<br>\n<strong>注意这个网址，这个网址可以使得没有科学上网也可以看到图片，如果你不是使用 picgo 进行上传也没差，最多麻烦点，通过上传 git 本地仓库的方式上传即可，使用图片记得遵循以下规则：</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/gh/github用户名/仓库名/需要显示的图片相对路径（相对于仓库名）</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>设定 Token<br>\n 点击右上角的 github 的设置，找到 Developer settings, 然后点击 Tokens (classic)</p>\n</li>\n</ul>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026205501572.png\" alt=\"image-20231026205501572\"></p>\n<p>然后 点击 generate new token (classic)，然后进行如下设置</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026205803543.png\" alt=\"image-20231026205803543\"></p>\n<p>Note 内容自己随便取</p>\n<p>点击创建，然后复制 token，粘贴到 设定 token 这一栏内即可。</p>\n<p>所有设置完成后 **，记得将它设置为默认图床。**</p>\n<p>到这一步大概配置都完成了，但是还有一个需要验证的地方哦～如下图所示</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026211017435.png\" alt=\"image-20231026211017435\"></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026211109365.png\" alt=\"image-20231026211109365\"></p>\n<h2 id=\"结合typora快速实现其图片上传\"><a class=\"markdownIt-Anchor\" href=\"#结合typora快速实现其图片上传\">#</a> 结合 typora 快速实现其图片上传</h2>\n<h3 id=\"下载typora0984及以上版本\"><a class=\"markdownIt-Anchor\" href=\"#下载typora0984及以上版本\">#</a> 下载 typora0.9.84 及以上版本</h3>\n<p>自己网上找哈～</p>\n<p>下载完成后，点击图片的偏好设置，进行如下图所示的设置</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026210629147.png\" alt=\"image-20231026210629147\"></p>\n<p>可以点击验证图片上传选项，看是否可行</p>\n<h3 id=\"如何上传图片\"><a class=\"markdownIt-Anchor\" href=\"#如何上传图片\">#</a> 如何上传图片</h3>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026211322400.png\" alt=\"image-20231026211322400\"> 上面是你正常把图片粘贴到目录下的情况，很明显是本地图片，一旦换个电脑或者上传到服务器上，图片就是不可见的了，只要把图片选中，右键上传图片，就能把图片上传至 github 上，这样图片在其他服务器上也是可见的，如下图所示</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/image-20231026211225958.png\" alt=\"image-20231026211225958\"></p>\n",
            "tags": []
        },
        {
            "id": "https://zjsxstar.github.io/2023/10/26/hello-world/",
            "url": "https://zjsxstar.github.io/2023/10/26/hello-world/",
            "title": "Hello World",
            "date_published": "2023-10-26T10:07:26.250Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        },
        {
            "id": "https://zjsxstar.github.io/2023/10/26/hexo/hexo%E7%BD%91%E9%A1%B5%E6%90%AD%E5%BB%BA&%E4%B8%BB%E9%A2%98shokax%E4%BD%BF%E7%94%A8/",
            "url": "https://zjsxstar.github.io/2023/10/26/hexo/hexo%E7%BD%91%E9%A1%B5%E6%90%AD%E5%BB%BA&%E4%B8%BB%E9%A2%98shokax%E4%BD%BF%E7%94%A8/",
            "title": "hexo 网页搭建 & 主题shokax的使用",
            "date_published": "2023-10-26T03:11:33.426Z",
            "content_html": "<h2 id=\"hexo-网页搭建\"><a class=\"markdownIt-Anchor\" href=\"#hexo-网页搭建\">#</a> hexo 网页搭建</h2>\n<h3 id=\"hexo简介\"><a class=\"markdownIt-Anchor\" href=\"#hexo简介\">#</a> Hexo 简介</h3>\n<p>Hexo 是一款基于 Node.js 的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在 GitHub 和 Coding 上，是搭建博客的首选框架。大家可以进入<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuLw==\"> hexo 官网</span>进行详细查看，因为 Hexo 的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p>\n<h3 id=\"hexo搭建步骤\"><a class=\"markdownIt-Anchor\" href=\"#hexo搭建步骤\">#</a> Hexo 搭建步骤</h3>\n<ol>\n<li>安装 Git</li>\n<li>安装 Node.js</li>\n<li>安装 Hexo</li>\n<li>GitHub 创建个人仓库</li>\n<li>生成 SSH 添加到 GitHub</li>\n<li>将 hexo 部署到 GitHub</li>\n<li>发布文章</li>\n</ol>\n<h4 id=\"1安装git\"><a class=\"markdownIt-Anchor\" href=\"#1安装git\">#</a> 1. 安装 Git</h4>\n<p>Git 是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的 hexo 博客文章，上传到 GitHub 的工具。Git 非常强大，我觉得建议每个人都去了解一下。廖雪峰老师的 Git 教程写的非常好，大家可以了解一下。<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGlhb3h1ZWZlbmcuY29tL3dpa2kvMDAxMzczOTUxNjMwNTkyOTYwNmRkMTgzNjEyNDg1NzhjNjdiODA2N2M4YzAxN2IwMDA=\">Git 教程</span></p>\n<p>windows：到 git 官网上下载，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRmb3J3aW5kb3dzLm9yZy8=\">Download git</span>, 下载后会有一个 Git Bash 的命令行工具，以后就用这个工具来使用 git。</p>\n<p>linux：对 linux 来说实在是太简单了，因为最早的 git 就是在 linux 上编写的，只需要一行代码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install git</span><br></pre></td></tr></table></figure>\n<p>安装好后，用 <code>git --version</code>  来查看一下版本</p>\n<h4 id=\"2-安装nodejs\"><a class=\"markdownIt-Anchor\" href=\"#2-安装nodejs\">#</a> 2. 安装 nodejs</h4>\n<p>Hexo 是基于 nodeJS 编写的，所以需要安装一下 nodeJs 和里面的 npm 工具。</p>\n<p>windows：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL2VuL2Rvd25sb2FkLw==\">nodejs</span> 选择 LTS 版本就行了。</p>\n<p>安装完后，打开命令行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n<p>检查一下有没有安装成功</p>\n<p>顺便说一下，windows 在 git 安装完后，就可以直接使用 git bash 来敲命令行了，不用自带的 cmd，cmd 有点难用。</p>\n<h4 id=\"3-安装hexo\"><a class=\"markdownIt-Anchor\" href=\"#3-安装hexo\">#</a> 3. 安装 hexo</h4>\n<p>前面 git 和 nodejs 安装好后，就可以安装 hexo 了，你可以先创建一个文件夹 blog，然后 <code>cd</code>  到这个文件夹下（或者在这个文件夹下直接右键 git bash 打开）。</p>\n<p>输入命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>依旧用 <code>hexo -v</code>  查看一下版本</p>\n<p>至此就全部安装完了。</p>\n<p>接下来初始化一下 hexo，在 blog 路径下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init myblog</span><br></pre></td></tr></table></figure>\n<p>这个 myblog 可以自己取什么名字都行，然后</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> myblog //进入这个myblog文件夹</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<p>新建完成后，指定文件夹目录下有：</p>\n<ul>\n<li>node_modules: 依赖包</li>\n<li>public：存放生成的页面</li>\n<li>scaffolds：生成文章的一些模板</li>\n<li>source：用来存放你的文章</li>\n<li>themes：主题</li>\n<li><strong>_config.yml: 博客的配置文件</strong></li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n<p>打开 hexo 的服务，在浏览器输入 localhost:4000 就可以看到你生成的博客了。</p>\n<p>大概长这样：</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/1698315145946.png\" alt=\"1698315145946\"></p>\n<h4 id=\"4-github创建个人仓库\"><a class=\"markdownIt-Anchor\" href=\"#4-github创建个人仓库\">#</a> 4. GitHub 创建个人仓库</h4>\n<p>首先，你先要有一个 GitHub 账户，注册我就不细讲了。</p>\n<p>注册完登录后，在 GitHub.com 中看到一个 New repository，新建仓库</p>\n<p>创建一个和你 github 用户名相同的仓库，<span class=\"exturl\" data-url=\"aHR0cDovL3huLS15ZnIxNmFuMTlsLmdpdGh1Yi5pbw==\">后面加.github.io</span>，只有这样，将来要部署到 GitHub page 的时候，才会被识别，<span class=\"exturl\" data-url=\"aHR0cDovL3huLS14eHh4LTRtNWYzNTRldjVwLmdpdGh1Yi5pbw==\">也就是 xxxx.github.io</span>，其中 xxx 就是你注册 GitHub 的用户名。</p>\n<p>其他的默认即可，点击 create repository。</p>\n<h4 id=\"5-生成ssh添加到github\"><a class=\"markdownIt-Anchor\" href=\"#5-生成ssh添加到github\">#</a> 5. 生成 SSH 添加到 GitHub</h4>\n<p>回到你的 git bash 中，</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;yourname&quot;</span><br><span class=\"line\">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure>\n<p>这里的 yourname 输入你的 GitHub 用户名，youremail 输入你 GitHub 的邮箱。这样 GitHub 才能知道你是不是对应它的账户。</p>\n<p>可以用以下两条，检查一下你有没有输对</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config user.name</span><br><span class=\"line\">git config user.email</span><br></pre></td></tr></table></figure>\n<p>然后创建 SSH, 一路回车</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure>\n<p>这个时候它会告诉你已经生成了.ssh 的文件夹。在你的电脑中找到这个文件夹。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/1698303339645.png\" alt=\"1698303339645\"></p>\n<p>ssh，简单来讲，就是一个秘钥，其中， <code>id_rsa</code>  是你这台电脑的私人秘钥，不能给别人看的， <code>id_rsa.pub</code>  是公共秘钥，可以随便给别人看。把这个公钥放在 GitHub 上，这样当你链接 GitHub 自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过 git 上传你的文件到 GitHub 上。<br>\n而后在 GitHub 的 setting 中，找到 SSH keys 的设置选项，点击 <code>New SSH key</code> <br>\n 把你的 <code>id_rsa.pub</code>  里面的信息复制进去。</p>\n<p>在 gitbash 中，查看是否成功</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n<h4 id=\"6-将hexo部署到github\"><a class=\"markdownIt-Anchor\" href=\"#6-将hexo部署到github\">#</a> 6. 将 hexo 部署到 GitHub</h4>\n<p>这一步，我们就可以将 hexo 和 GitHub 关联起来，也就是将 hexo 生成的文章部署到 GitHub 上，打开站点配置文件  <code>_config.yml</code> ，翻到最后，修改为 YourgithubName，就是你的 GitHub 账户名</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: git</span><br><span class=\"line\">  repo: https://github.com/YourgithubName/YourgithubName.github.io.git</span><br><span class=\"line\">  branch: master</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>这个时候需要先安装 deploy-git ，也就是部署的命令，这样你才能用命令部署到 GitHub。</p>\n<p>在 myblog 目录下运行下面的命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>然后</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n<p>其中  <code>hexo clean</code>  清除了你之前生成的东西，也可以不加。<br>\n <code>hexo generate</code>  顾名思义，生成静态文章，可以用  <code>hexo g</code>  缩写<br>\n <code>hexo deploy</code>  部署文章，可以用 <code>hexo d</code>  缩写</p>\n<p>注意 deploy 时可能要你输入 username 和 password。</p>\n<p>得到下图就说明部署成功了，过一会儿就可以在 <code>http://yourname.github.io</code>  这个网站看到你的博客了！！</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/img_convert/a4eba29bb7c185169228b596e636422f.png\" alt=\"img\"></p>\n<h4 id=\"发布文章\"><a class=\"markdownIt-Anchor\" href=\"#发布文章\">#</a> 发布文章</h4>\n<p>在 source/_post 中打开 markdown 文件，就可以开始编辑了。当你写完的时候，再</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<p>就可以看到更新了。</p>\n<h2 id=\"主题shokax的使用\"><a class=\"markdownIt-Anchor\" href=\"#主题shokax的使用\">#</a> 主题 shokax 的使用</h2>\n<p>首先是进入 hexo 的主题网站，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3RoZW1lcy8=\">Themes | Hexo</span></p>\n<p>搜索 shokax，得到如下图所示：</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/Zjsxstar/image/PicGo_image/1698304925901.png\" alt=\"1698304925901\"></p>\n<p>点击 shokax，跳转到对应的 github 地址，找到安装方法：</p>\n<p>在 myblog 目录下，运行下面命令：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i shokax-cli --location=<span class=\"keyword\">global</span></span><br><span class=\"line\"><span class=\"comment\"># hexo init 初始化环境</span></span><br><span class=\"line\">SXC install shokaX</span><br></pre></td></tr></table></figure>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmthaXRha3UueHl6L2d1aWRlLyMlRTklODUlOEQlRTclQkQlQUUlRTQlQjglQkIlRTklQTIlOTg=\">点此</span>以进行下一步配置</p>\n<p>我这边直接贴出下一步配置具体步骤：</p>\n<p>更改根目录 <code>_config.yml</code>  中的 <code>theme</code>  为 <code>shokaX</code>  (SXC 默认 origin 或 npm 安装修改为 <code>shokax</code> )<br>\n 请注意，本主题仅在 npm 上使用的是 <code>shokax</code> , 其他情况下均为 <code>shokaX</code> <br>\n 对于 linux 等大小写敏感的系统，npm 源的 theme 必须使用 <code>shokax</code>  同时修改自定义配置文件为 <code>_config.shokax.yml</code></p>\n<p>至此，主题配置完成，可以使用了。</p>\n<p><strong>注意</strong>：shokaX 主题不是安装在 themes 目录下的，是安装在 <code>node_modules\\hexo-theme-shokax</code>  下的</p>\n<h3 id=\"针对本地运行能显示图片但是部署到github上后就不能显示的问题的解决方法\"><a class=\"markdownIt-Anchor\" href=\"#针对本地运行能显示图片但是部署到github上后就不能显示的问题的解决方法\">#</a> 针对本地运行能显示图片，但是部署到 github 上后就不能显示的问题的解决方法</h3>\n<p>目前新浪图床开启了防盗链，所以所有 cover 图片都无法正常加载，解决方法如下 **（二选一）**:</p>\n<ul>\n<li>自托管封面图片</li>\n<li>使用 CSS 渐变模式</li>\n</ul>\n<h4 id=\"自托管\"><a class=\"markdownIt-Anchor\" href=\"#自托管\">#</a> 自托管</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vemt6MC9pbWFnZS90cmVlL21hc3Rlcg==\">点我</span>跳转到作者做的封面图片备份，将备份 clone 到本地或服务器上，剩下的和静态网站托管一样<br>\n修改 <code>_images.yml</code>  内的内容，参考此格式:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">http://example.com/img1.webp</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">http://example.com/img2.webp</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"使用css渐变模式\"><a class=\"markdownIt-Anchor\" href=\"#使用css渐变模式\">#</a> 使用 CSS 渐变模式</h4>\n<p>此模式将文章封面修改为 CSS 渐变来解决此问题<br>\n修改主题 <code>_config.yml</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">experiments:</span><br><span class=\"line\">  gradient: true # 使用CSS渐变作为文章封面</span><br><span class=\"line\">  fixedCover: &quot;/cover.webp&quot; # 当gradient为true时使用的主页面cover或者主界面的固定Cover(0.1.5+)</span><br><span class=\"line\">  # 上面的配置请设置为自己的背景图片</span><br></pre></td></tr></table></figure>\n<p>随后重新 <code>hexo g</code>  即可</p>\n<p>后续的详细的配置可以参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY2F0ZWdvcmllcy9jb21wdXRlci1zY2llbmNlL25vdGUv\">分类：二进制杂谈 | Yume Shoka = 優萌初華 = 有夢書架 (lostyu.me)</span></p>\n<h2 id=\"参考链接\"><a class=\"markdownIt-Anchor\" href=\"#参考链接\">#</a> 参考链接</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzM3NzgxMzA0L2FydGljbGUvZGV0YWlscy84MjcyOTAyOQ==\">hexo 史上最全搭建教程 - CSDN 博客</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JldHJheVZpcmdpbmlhL2FydGljbGUvZGV0YWlscy8xMTM1NzIzNjQ=\">第 2 章 - Hexo 博客美化 | shkoa 的配置范例_shokax 主题 - CSDN 博客</span></p>\n",
            "tags": []
        }
    ]
}